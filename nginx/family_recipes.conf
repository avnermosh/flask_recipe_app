# Define the parameters for a specific virtual host/server
server {
    # Define the directory where the contents being requested are stored
    # root /usr/src/app/project/;
    # root /home/flask/app/web;

    # Define the default page that will be served If no page was requested
    # (ie. if www.kennedyfamilyrecipes.com is requested)
    # index index.html;

    # Define the server name, IP address, and/or port of the server
    listen 80;
    # server_name xxx.yyy.zzz.aaa

    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    # Configure NGINX to deliver static content from the specified folder
    location /static {
        alias /home/flask/app/web/instance;
    }

    location /avner/img {
        root /home/flask/app/web/project;
    }

    # ok - page loads at - http://localhost/foo, http://127.0.0.1/foo, http://127.0.0.1/foo/index1.html
    location /foo {
        # load from the mounted dir from the host
        # ok - changes in index1.html from outside the container reflect inside the container
        root /usr/src/app/web;
        index index5.html;
    }

    location /V1 {
        # ok - http://localhost/V1/ loads, and I can do changes to the webClient code oon the fly,
        #      without having to restart the docker containers
        root /usr/src/app/web;
        index index.html;
    }

    # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
    location / {
        # Define the location of the proxy server to send the request to
        proxy_pass http://web:8000;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Define the maximum file size on file uploads
        client_max_body_size 5M;
        client_body_buffer_size 5M;
    }
}
